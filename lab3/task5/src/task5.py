# Импортируем библиотеки для отслеживания времени работы программы и использования памяти
import tracemalloc
import time
from lab2.utils import open_file, write_file

# Запускаем таймер для измерения времени работы программы
t_start = time.perf_counter()

# Включаем отслеживание памяти, чтобы отслеживать, сколько памяти использует программа
tracemalloc.start()


# Функция для вычисления индекса H (h-index) на основе списка цитирований
def h_index(citations):
    # Сортируем список цитирований по убыванию
    citations.sort(reverse=True)

    # Ищем максимальное значение h, которое выполняет условие h <= цитированию на позиции i
    for i in range(len(citations)):
        if citations[i] < i + 1:
            return i  # Возвращаем значение индекса, если условие нарушено

    # Если цикл завершился без нарушения условия, возвращаем длину списка как индекс H
    return len(citations)


# Основной блок программы
if __name__ == "__main__":
    # Читаем данные из файла input.txt с помощью функции open_file
    n_str, citations = open_file("../txtf/input.txt")
    n = n_str[0]  # Извлекаем размер массива из первого значения

    # Проверка корректности входных данных:
    # - размер массива должен быть в пределах от 1 до 5000
    # - все элементы массива должны быть в пределах от 0 до 1000
    if (1 <= n <= 5000) and (all(0 <= i <= 1000 for i in citations)):
        # Вычисляем индекс H для списка цитирований
        h_index_value = h_index(citations)

        # Записываем полученное значение индекса H в файл output.txt
        write_file(h_index_value, "../txtf/output.txt")
    else:
        # Если данные некорректны, выводим сообщение об ошибке
        print('Введите корректные данные')

    # Выводим время выполнения программы
    print("Время работы: %s секунд" % (time.perf_counter() - t_start))

    # Выводим количество памяти, затраченной на выполнение программы
    print("Затрачено памяти:", tracemalloc.get_traced_memory()[1], "байт")

    # Останавливаем отслеживание памяти
    tracemalloc.stop()
